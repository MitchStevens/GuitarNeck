// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Traversable = require("../Data.Traversable");
var Debug_Trace = require("../Debug.Trace");
var Halogen = require("../Halogen");
var Halogen_Aff = require("../Halogen.Aff");
var Halogen_Component = require("../Halogen.Component");
var Halogen_HTML = require("../Halogen.HTML");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements");
var Halogen_HTML_Events = require("../Halogen.HTML.Events");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM");
var Music = require("../Music");
var Music_Chord = require("../Music.Chord");
var Parser = require("../Parser");
var Prelude = require("../Prelude");
var Text_Parsing_Parser = require("../Text.Parsing.Parser");
var Text_Parsing_Parser_Pos = require("../Text.Parsing.Parser.Pos");
var StringInput = (function () {
    function StringInput(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    StringInput.create = function (value0) {
        return function (value1) {
            return new StringInput(value0, value1);
        };
    };
    return StringInput;
})();
var CurrentChord = (function () {
    function CurrentChord(value0) {
        this.value0 = value0;
    };
    CurrentChord.create = function (value0) {
        return new CurrentChord(value0);
    };
    return CurrentChord;
})();
var ChangedState = (function () {
    function ChangedState(value0) {
        this.value0 = value0;
    };
    ChangedState.create = function (value0) {
        return new ChangedState(value0);
    };
    return ChangedState;
})();
var display_error = function (error) {
    return Halogen_HTML_Elements.span([ Halogen_HTML_Properties.id_("error_display") ])([ Halogen_HTML_Core.text(Text_Parsing_Parser.parseErrorMessage(error)) ]);
};
var display_chord = function (chord) {
    var m = Music_Chord.markup(chord);
    var ext_html = function (ext) {
        return Halogen_HTML_Elements.sup([ Halogen_HTML_Properties.class_("extension") ])([ Halogen_HTML_Core.text(ext) ]);
    };
    return Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_("chord-display") ])([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_("root") ])([ Halogen_HTML_Core.text(m.root) ]), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_("mode") ])([ Halogen_HTML_Core.text(m.mode) ]), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_("head-ext") ])([ Halogen_HTML_Core.text(m.head_ext) ]), Halogen_HTML_Elements.span_(Data_Functor.map(Data_Functor.functorArray)(ext_html)(m.tail_ext)) ]);
};
var chord_input = (function () {
    var render = function (state) {
        return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.input([ Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(StringInput.create)) ]), Data_Either.either(display_error)(display_chord)(state) ]);
    };
    var initialState = Text_Parsing_Parser.runParser("")(Parser.parse_chord);
    var $$eval = function (v) {
        if (v instanceof StringInput) {
            var state = Text_Parsing_Parser.runParser(v.value0)(Parser.parse_chord);
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(state))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new ChangedState(state)))(function () {
                    return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                });
            });
        };
        if (v instanceof CurrentChord) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0(v1));
            });
        };
        throw new Error("Failed pattern match at UI.ChordInput line 53, column 10 - line 61, column 21: " + [ v.constructor.name ]);
    };
    return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
        initialState: Data_Function["const"](initialState),
        render: render,
        "eval": $$eval,
        receiver: Data_Function["const"](Data_Maybe.Nothing.value)
    });
})();
module.exports = {
    StringInput: StringInput,
    CurrentChord: CurrentChord,
    ChangedState: ChangedState,
    chord_input: chord_input,
    display_error: display_error,
    display_chord: display_chord
};
