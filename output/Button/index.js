// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Data_Function = require("../Data.Function");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Halogen = require("../Halogen");
var Halogen_Component = require("../Halogen.Component");
var Halogen_HTML = require("../Halogen.HTML");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements");
var Halogen_HTML_Events = require("../Halogen.HTML.Events");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM");
var Prelude = require("../Prelude");
var Toggle = (function () {
    function Toggle(value0) {
        this.value0 = value0;
    };
    Toggle.create = function (value0) {
        return new Toggle(value0);
    };
    return Toggle;
})();
var IsOn = (function () {
    function IsOn(value0) {
        this.value0 = value0;
    };
    IsOn.create = function (value0) {
        return new IsOn(value0);
    };
    return IsOn;
})();
var Toggled = (function () {
    function Toggled(value0) {
        this.value0 = value0;
    };
    Toggled.create = function (value0) {
        return new Toggled(value0);
    };
    return Toggled;
})();
var myButton = (function () {
    var render = function (state) {
        var label = (function () {
            if (state) {
                return "On";
            };
            return "Off";
        })();
        return Halogen_HTML_Elements.button([ Halogen_HTML_Properties.title(label), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Toggle.create)) ])([ Halogen_HTML_Core.text(label) ]);
    };
    var $$eval = function (v) {
        if (v instanceof Toggle) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                var nextState = !v1;
                return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(nextState))(function () {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new Toggled(nextState)))(function () {
                        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                    });
                });
            });
        };
        if (v instanceof IsOn) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0(v1));
            });
        };
        throw new Error("Failed pattern match at Button line 43, column 10 - line 52, column 24: " + [ v.constructor.name ]);
    };
    return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
        initialState: Data_Function["const"](false),
        render: render,
        "eval": $$eval,
        receiver: Data_Function["const"](Data_Maybe.Nothing.value)
    });
})();
module.exports = {
    Toggle: Toggle,
    IsOn: IsOn,
    Toggled: Toggled,
    myButton: myButton
};
