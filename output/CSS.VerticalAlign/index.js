// Generated by purs version 0.11.7
"use strict";
var CSS_Common = require("../CSS.Common");
var CSS_Property = require("../CSS.Property");
var CSS_String = require("../CSS.String");
var CSS_Stylesheet = require("../CSS.Stylesheet");
var Data_Function = require("../Data.Function");
var Baseline = (function () {
    function Baseline() {

    };
    Baseline.value = new Baseline();
    return Baseline;
})();
var Sub = (function () {
    function Sub() {

    };
    Sub.value = new Sub();
    return Sub;
})();
var Super = (function () {
    function Super() {

    };
    Super.value = new Super();
    return Super;
})();
var TextTop = (function () {
    function TextTop() {

    };
    TextTop.value = new TextTop();
    return TextTop;
})();
var TextBottom = (function () {
    function TextBottom() {

    };
    TextBottom.value = new TextBottom();
    return TextBottom;
})();
var Middle = (function () {
    function Middle() {

    };
    Middle.value = new Middle();
    return Middle;
})();
var Top = (function () {
    function Top() {

    };
    Top.value = new Top();
    return Top;
})();
var Bottom = (function () {
    function Bottom() {

    };
    Bottom.value = new Bottom();
    return Bottom;
})();
var Inherit = (function () {
    function Inherit() {

    };
    Inherit.value = new Inherit();
    return Inherit;
})();
var Initial = (function () {
    function Initial() {

    };
    Initial.value = new Initial();
    return Initial;
})();
var Unset = (function () {
    function Unset() {

    };
    Unset.value = new Unset();
    return Unset;
})();
var valVerticalAlign = new CSS_Property.Val(function (v) {
    if (v instanceof Baseline) {
        return CSS_String.fromString(CSS_Property.isStringValue)("baseline");
    };
    if (v instanceof Sub) {
        return CSS_String.fromString(CSS_Property.isStringValue)("sub");
    };
    if (v instanceof Super) {
        return CSS_String.fromString(CSS_Property.isStringValue)("super");
    };
    if (v instanceof TextTop) {
        return CSS_String.fromString(CSS_Property.isStringValue)("text-top");
    };
    if (v instanceof TextBottom) {
        return CSS_String.fromString(CSS_Property.isStringValue)("text-bottom");
    };
    if (v instanceof Middle) {
        return CSS_String.fromString(CSS_Property.isStringValue)("middle");
    };
    if (v instanceof Top) {
        return CSS_String.fromString(CSS_Property.isStringValue)("top");
    };
    if (v instanceof Bottom) {
        return CSS_String.fromString(CSS_Property.isStringValue)("bottom");
    };
    if (v instanceof Inherit) {
        return CSS_String.fromString(CSS_Property.isStringValue)("inherit");
    };
    if (v instanceof Initial) {
        return CSS_String.fromString(CSS_Property.isStringValue)("initial");
    };
    if (v instanceof Unset) {
        return CSS_String.fromString(CSS_Property.isStringValue)("unset");
    };
    throw new Error("Failed pattern match at CSS.VerticalAlign line 22, column 1 - line 22, column 49: " + [ v.constructor.name ]);
});
var verticalAlign = CSS_Stylesheet.key(valVerticalAlign)(CSS_String.fromString(CSS_Property.isStringKey)("vertical-align"));
var unsetVerticalAlign = new CSS_Common.Unset(Unset.value);
var topVerticalAlign = new CSS_Common.Top(Top.value);
var textTop = TextTop.value;
var textBottom = TextBottom.value;
var $$super = Super.value;
var sub = Sub.value;
var middleVerticalAlign = new CSS_Common.Middle(Middle.value);
var initialVerticalAlign = new CSS_Common.Initial(Initial.value);
var inheritVerticalAlign = new CSS_Common.Inherit(Inherit.value);
var bottomVerticalAlign = new CSS_Common.Bottom(Bottom.value);
var baselineVerticalAlign = new CSS_Common.Baseline(Baseline.value);
module.exports = {
    Baseline: Baseline,
    Sub: Sub,
    Super: Super,
    TextTop: TextTop,
    TextBottom: TextBottom,
    Middle: Middle,
    Top: Top,
    Bottom: Bottom,
    Inherit: Inherit,
    Initial: Initial,
    Unset: Unset,
    sub: sub,
    "super": $$super,
    textTop: textTop,
    textBottom: textBottom,
    verticalAlign: verticalAlign,
    valVerticalAlign: valVerticalAlign,
    inheritVerticalAlign: inheritVerticalAlign,
    initialVerticalAlign: initialVerticalAlign,
    unsetVerticalAlign: unsetVerticalAlign,
    baselineVerticalAlign: baselineVerticalAlign,
    middleVerticalAlign: middleVerticalAlign,
    topVerticalAlign: topVerticalAlign,
    bottomVerticalAlign: bottomVerticalAlign
};
