// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Core = require("../Core");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Matrix = (function () {
    function Matrix(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    Matrix.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new Matrix(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return Matrix;
})();
var Translate = (function () {
    function Translate(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Translate.create = function (value0) {
        return function (value1) {
            return new Translate(value0, value1);
        };
    };
    return Translate;
})();
var Scale = (function () {
    function Scale(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Scale.create = function (value0) {
        return function (value1) {
            return new Scale(value0, value1);
        };
    };
    return Scale;
})();
var Rotate = (function () {
    function Rotate(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Rotate.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Rotate(value0, value1, value2);
            };
        };
    };
    return Rotate;
})();
var SkewX = (function () {
    function SkewX(value0) {
        this.value0 = value0;
    };
    SkewX.create = function (value0) {
        return new SkewX(value0);
    };
    return SkewX;
})();
var SkewY = (function () {
    function SkewY(value0) {
        this.value0 = value0;
    };
    SkewY.create = function (value0) {
        return new SkewY(value0);
    };
    return SkewY;
})();
var Start = (function () {
    function Start() {

    };
    Start.value = new Start();
    return Start;
})();
var AnchorMiddle = (function () {
    function AnchorMiddle() {

    };
    AnchorMiddle.value = new AnchorMiddle();
    return AnchorMiddle;
})();
var End = (function () {
    function End() {

    };
    End.value = new End();
    return End;
})();
var M = (function () {
    function M(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    M.create = function (value0) {
        return function (value1) {
            return new M(value0, value1);
        };
    };
    return M;
})();
var L = (function () {
    function L(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    L.create = function (value0) {
        return function (value1) {
            return new L(value0, value1);
        };
    };
    return L;
})();
var C = (function () {
    function C(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    C.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new C(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return C;
})();
var S = (function () {
    function S(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    S.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new S(value0, value1, value2, value3);
                };
            };
        };
    };
    return S;
})();
var Q = (function () {
    function Q(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Q.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Q(value0, value1, value2, value3);
                };
            };
        };
    };
    return Q;
})();
var T = (function () {
    function T(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    T.create = function (value0) {
        return function (value1) {
            return new T(value0, value1);
        };
    };
    return T;
})();
var A = (function () {
    function A(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    A.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new A(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    return A;
})();
var Z = (function () {
    function Z() {

    };
    Z.value = new Z();
    return Z;
})();
var Rel = (function () {
    function Rel(value0) {
        this.value0 = value0;
    };
    Rel.create = function (value0) {
        return new Rel(value0);
    };
    return Rel;
})();
var Abs = (function () {
    function Abs(value0) {
        this.value0 = value0;
    };
    Abs.create = function (value0) {
        return new Abs(value0);
    };
    return Abs;
})();
var RGB = (function () {
    function RGB(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    RGB.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new RGB(value0, value1, value2);
            };
        };
    };
    return RGB;
})();
var Auto = (function () {
    function Auto() {

    };
    Auto.value = new Auto();
    return Auto;
})();
var UseScript = (function () {
    function UseScript() {

    };
    UseScript.value = new UseScript();
    return UseScript;
})();
var NoChange = (function () {
    function NoChange() {

    };
    NoChange.value = new NoChange();
    return NoChange;
})();
var ResetSize = (function () {
    function ResetSize() {

    };
    ResetSize.value = new ResetSize();
    return ResetSize;
})();
var Ideographic = (function () {
    function Ideographic() {

    };
    Ideographic.value = new Ideographic();
    return Ideographic;
})();
var Alphabetic = (function () {
    function Alphabetic() {

    };
    Alphabetic.value = new Alphabetic();
    return Alphabetic;
})();
var Hanging = (function () {
    function Hanging() {

    };
    Hanging.value = new Hanging();
    return Hanging;
})();
var Mathematical = (function () {
    function Mathematical() {

    };
    Mathematical.value = new Mathematical();
    return Mathematical;
})();
var Central = (function () {
    function Central() {

    };
    Central.value = new Central();
    return Central;
})();
var BaselineMiddle = (function () {
    function BaselineMiddle() {

    };
    BaselineMiddle.value = new BaselineMiddle();
    return BaselineMiddle;
})();
var TextAfterEdge = (function () {
    function TextAfterEdge() {

    };
    TextAfterEdge.value = new TextAfterEdge();
    return TextAfterEdge;
})();
var TextBeforeEdge = (function () {
    function TextBeforeEdge() {

    };
    TextBeforeEdge.value = new TextBeforeEdge();
    return TextBeforeEdge;
})();
var printTransform = function (v) {
    if (v instanceof Matrix) {
        return "matrix(" + (Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ v.value0, v.value1, v.value2, v.value3, v.value4, v.value5 ])) + ")");
    };
    if (v instanceof Translate) {
        return "translate(" + (Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ v.value0, v.value1 ])) + ")");
    };
    if (v instanceof Scale) {
        return "scale(" + (Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ v.value0, v.value1 ])) + ")");
    };
    if (v instanceof Rotate) {
        return "rotate(" + (Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ v.value0, v.value1, v.value2 ])) + ")");
    };
    if (v instanceof SkewX) {
        return "skewX(" + (Data_Show.show(Data_Show.showNumber)(v.value0) + ")");
    };
    if (v instanceof SkewY) {
        return "skewY(" + (Data_Show.show(Data_Show.showNumber)(v.value0) + ")");
    };
    throw new Error("Failed pattern match at Svg.Attributes line 52, column 1 - line 52, column 38: " + [ v.constructor.name ]);
};
var printTextAnchor = function (v) {
    if (v instanceof Start) {
        return "start";
    };
    if (v instanceof AnchorMiddle) {
        return "middle";
    };
    if (v instanceof End) {
        return "end";
    };
    throw new Error("Failed pattern match at Svg.Attributes line 30, column 1 - line 30, column 40: " + [ v.constructor.name ]);
};
var printCommand = function (v) {
    if (v instanceof M) {
        return {
            command: "m",
            params: Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ v.value0, v.value1 ]))
        };
    };
    if (v instanceof L) {
        return {
            command: "l",
            params: Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ v.value0, v.value1 ]))
        };
    };
    if (v instanceof C) {
        return {
            command: "c",
            params: Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ v.value0, v.value1, v.value2, v.value3, v.value4, v.value5 ]))
        };
    };
    if (v instanceof S) {
        return {
            command: "s",
            params: Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ v.value0, v.value1, v.value2, v.value3 ]))
        };
    };
    if (v instanceof Q) {
        return {
            command: "q",
            params: Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ v.value0, v.value1, v.value2, v.value3 ]))
        };
    };
    if (v instanceof T) {
        return {
            command: "t",
            params: Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ v.value0, v.value1 ]))
        };
    };
    if (v instanceof A) {
        var sweep_flag = (function () {
            if (v.value4) {
                return "0";
            };
            return "1";
        })();
        var large_flag = (function () {
            if (v.value3) {
                return "0";
            };
            return "1";
        })();
        return {
            command: "a",
            params: Data_String.joinWith(",")(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ v.value0, v.value1, v.value2 ]))(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ large_flag, sweep_flag ])(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ v.value5, v.value6 ]))))
        };
    };
    if (v instanceof Z) {
        return {
            command: "z",
            params: ""
        };
    };
    throw new Error("Failed pattern match at Svg.Attributes line 78, column 1 - line 78, column 65: " + [ v.constructor.name ]);
};
var printD = function (v) {
    if (v instanceof Abs) {
        var p = printCommand(v.value0);
        return Data_String.toUpper(p.command) + p.params;
    };
    if (v instanceof Rel) {
        var p = printCommand(v.value0);
        return p.command + p.params;
    };
    throw new Error("Failed pattern match at Svg.Attributes line 62, column 1 - line 62, column 22: " + [ v.constructor.name ]);
};
var printColor = function (v) {
    if (v instanceof Data_Maybe.Just) {
        return "rgb(" + (Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showInt))([ v.value0.value0, v.value0.value1, v.value0.value2 ])) + ")");
    };
    if (v instanceof Data_Maybe.Nothing) {
        return "None";
    };
    throw new Error("Failed pattern match at Svg.Attributes line 16, column 1 - line 16, column 36: " + [ v.constructor.name ]);
};
var printBaseline = function (v) {
    if (v instanceof Auto) {
        return "auto";
    };
    if (v instanceof UseScript) {
        return "use-script";
    };
    if (v instanceof NoChange) {
        return "no-change";
    };
    if (v instanceof ResetSize) {
        return "reset-size";
    };
    if (v instanceof Ideographic) {
        return "ideographic";
    };
    if (v instanceof Alphabetic) {
        return "alphabetic";
    };
    if (v instanceof Hanging) {
        return "hanging";
    };
    if (v instanceof Mathematical) {
        return "mathematical";
    };
    if (v instanceof Central) {
        return "central";
    };
    if (v instanceof BaselineMiddle) {
        return "middle";
    };
    if (v instanceof TextAfterEdge) {
        return "text-after-edge";
    };
    if (v instanceof TextBeforeEdge) {
        return "text-before-edge";
    };
    throw new Error("Failed pattern match at Svg.Attributes line 38, column 1 - line 38, column 36: " + [ v.constructor.name ]);
};
var attr = Core.attr;
var cx = function ($62) {
    return attr("cx")(Data_Show.show(Data_Show.showNumber)($62));
};
var cy = function ($63) {
    return attr("cy")(Data_Show.show(Data_Show.showNumber)($63));
};
var d = function ($64) {
    return attr("d")(Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(printD)($64)));
};
var dominant_baseline = function ($65) {
    return attr("dominant-baseline")(printBaseline($65));
};
var fill = function ($66) {
    return attr("fill")(printColor($66));
};
var height = function ($67) {
    return attr("height")(Data_Show.show(Data_Show.showNumber)($67));
};
var r = function ($68) {
    return attr("r")(Data_Show.show(Data_Show.showNumber)($68));
};
var rx = function ($69) {
    return attr("rx")(Data_Show.show(Data_Show.showNumber)($69));
};
var ry = function ($70) {
    return attr("ry")(Data_Show.show(Data_Show.showNumber)($70));
};
var stroke = function ($71) {
    return attr("stroke")(printColor($71));
};
var text_anchor = function ($72) {
    return attr("text-anchor")(printTextAnchor($72));
};
var transform = function ($73) {
    return attr("transform")(Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(printTransform)($73)));
};
var viewBox = function (x1) {
    return function (y1) {
        return function (w) {
            return function (h) {
                return attr("viewBox")(Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([ x1, y1, w, h ])));
            };
        };
    };
};
var width = function ($74) {
    return attr("width")(Data_Show.show(Data_Show.showNumber)($74));
};
var x = function ($75) {
    return attr("x")(Data_Show.show(Data_Show.showNumber)($75));
};
var y = function ($76) {
    return attr("y")(Data_Show.show(Data_Show.showNumber)($76));
};
module.exports = {
    RGB: RGB,
    printColor: printColor,
    Matrix: Matrix,
    Translate: Translate,
    Scale: Scale,
    Rotate: Rotate,
    SkewX: SkewX,
    SkewY: SkewY,
    Start: Start,
    AnchorMiddle: AnchorMiddle,
    End: End,
    printTextAnchor: printTextAnchor,
    Auto: Auto,
    UseScript: UseScript,
    NoChange: NoChange,
    ResetSize: ResetSize,
    Ideographic: Ideographic,
    Alphabetic: Alphabetic,
    Hanging: Hanging,
    Mathematical: Mathematical,
    Central: Central,
    BaselineMiddle: BaselineMiddle,
    TextAfterEdge: TextAfterEdge,
    TextBeforeEdge: TextBeforeEdge,
    printBaseline: printBaseline,
    printTransform: printTransform,
    Rel: Rel,
    Abs: Abs,
    printD: printD,
    M: M,
    L: L,
    C: C,
    S: S,
    Q: Q,
    T: T,
    A: A,
    Z: Z,
    printCommand: printCommand,
    attr: attr,
    cx: cx,
    cy: cy,
    r: r,
    viewBox: viewBox,
    rx: rx,
    ry: ry,
    width: width,
    height: height,
    x: x,
    y: y,
    stroke: stroke,
    fill: fill,
    transform: transform,
    d: d,
    text_anchor: text_anchor,
    dominant_baseline: dominant_baseline
};
