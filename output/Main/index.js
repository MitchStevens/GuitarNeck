// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var DOM_HTML_HTMLElement = require("../DOM.HTML.HTMLElement");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var DOM_Node_ParentNode = require("../DOM.Node.ParentNode");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Debug_Trace = require("../Debug.Trace");
var Fingering = require("../Fingering");
var Fret = require("../Fret");
var Graphics_Canvas = require("../Graphics.Canvas");
var Halogen = require("../Halogen");
var Halogen_Aff = require("../Halogen.Aff");
var Halogen_Aff_Util = require("../Halogen.Aff.Util");
var Halogen_VDom_Driver = require("../Halogen.VDom.Driver");
var NeckData = require("../NeckData");
var Prelude = require("../Prelude");
var Reader = require("../Reader");
var UI_FFTypes = require("../UI.FFTypes");
var UI_GuitarComponent = require("../UI.GuitarComponent");
var UI_GuitarNeck = require("../UI.GuitarNeck");
var selector = "#content #guitar-component";
var default_neck_data = {
    x_offset: 0.0,
    y_offset: 20.0,
    width: 600.0,
    height: 120.0,
    num_frets: 15
};
var calc_neck_data = function (element) {
    return function __do() {
        var v = DOM_HTML_HTMLElement.offsetWidth(element)();
        return {
            x_offset: 20.0,
            y_offset: 20.0,
            width: v,
            height: v * 0.15,
            num_frets: 15
        };
    };
};
var await_guitar = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Halogen_Aff_Util.awaitLoad)(function () {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Aff_Util.selectElement(selector))(function (v) {
        return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error("Could not find element: " + selector)))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(v);
    });
});
var main = (function () {
    var cmaj = {
        e4: new Data_Maybe.Just(3),
        b3: new Data_Maybe.Just(5),
        g3: new Data_Maybe.Just(5),
        d3: new Data_Maybe.Just(5),
        a2: new Data_Maybe.Just(3),
        e2: Data_Maybe.Nothing.value
    };
    var amin = {
        e4: new Data_Maybe.Just(0),
        b3: new Data_Maybe.Just(1),
        g3: new Data_Maybe.Just(2),
        d3: new Data_Maybe.Just(2),
        a2: new Data_Maybe.Just(0),
        e2: Data_Maybe.Nothing.value
    };
    return Data_Functor["void"](Control_Monad_Eff.functorEff)(Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(await_guitar)(function (v) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(calc_neck_data(v)))(function (v1) {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_VDom_Driver.runUI(UI_GuitarNeck.guitar_neck)(v1)(v))(function (v2) {
                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
            });
        });
    })));
})();
module.exports = {
    default_neck_data: default_neck_data,
    selector: selector,
    main: main,
    await_guitar: await_guitar,
    calc_neck_data: calc_neck_data
};
