// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Data_Argonaut_Core = require("../Data.Argonaut.Core");
var Data_Argonaut_Decode = require("../Data.Argonaut.Decode");
var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class");
var Data_Argonaut_Encode = require("../Data.Argonaut.Encode");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_StrMap = require("../Data.StrMap");
var Data_Traversable = require("../Data.Traversable");
var Fingering = require("../Fingering");
var Parser = require("../Parser");
var Prelude = require("../Prelude");
var Text_Parsing_Parser = require("../Text.Parsing.Parser");
var decode_fingering = function (json) {
    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json))(function (v) {
        return Control_Bind.bind(Data_Either.bindEither)(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Show.show(Text_Parsing_Parser.showParseError))(Text_Parsing_Parser.runParser(v)(Parser.parse_fingering)))(function (v1) {
            return Control_Applicative.pure(Data_Either.applicativeEither)(v1);
        });
    });
};
var decode_fingering_map = function (json) {
    var decode_array = Data_Argonaut_Core.foldJsonArray(new Data_Either.Left("error"))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decode_fingering));
    return Data_Argonaut_Core.foldJsonObject(Data_Either.Left.create("Couldn't decode " + Data_Show.show(Data_Argonaut_Core.showJson)(json)))(Data_Traversable.traverse(Data_StrMap.traversableStrMap)(Data_Either.applicativeEither)(decode_array))(json);
};
module.exports = {
    decode_fingering: decode_fingering,
    decode_fingering_map: decode_fingering_map
};
